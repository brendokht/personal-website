---
import MobileNavItem from "./MobileNavItem.astro";
import NavItem from "./NavItem.astro";
import { Sun, Moon, Menu, X } from "@lucide/astro";
---

<!-- Medium screen navbar -->
<nav class="z-10 bg-[#9796f0] drop-shadow-lg dark:bg-[#0f0c29]">
  <div class="container flex w-full flex-row justify-between px-6 py-2">
    <span
      class="text-4xl font-bold transition-transform duration-200 ease-in-out hover:scale-97"
      ><a href="/">BK</a></span
    >
    <div class="hidden items-center md:flex">
      <ul
        class="navbar-menu hidden w-full flex-row justify-evenly md:mx-auto md:flex md:items-center md:space-x-14 lg:space-x-28"
      >
        <NavItem href="/" text="Home" />
        <NavItem href="/#about" text="About" />
        <NavItem href="/#projects" text="Projects" />
        <NavItem href="/#contact" text="Contact" />
        <li>
          <span
            id="themeToggle"
            class="cursor-pointer rounded-md border-0 bg-none p-2 transition-colors duration-200 ease-in-out hover:bg-neutral-300 dark:hover:bg-neutral-500"
          >
            <Sun id="sun" class="hidden dark:inline-block" />
            <Moon id="moon" class="inline-block dark:hidden" />
          </span>
        </li>
      </ul>
    </div>
    <div class="md:hidden">
      <div
        class="navbar-burger inline-flex cursor-pointer items-center rounded-md p-2 hover:bg-neutral-300 dark:hover:bg-neutral-500"
      >
        <button aria-label="Open menu button"
          ><Menu class="hover:cursor-pointer" /></button
        >
      </div>
      <div
        class="navbar-close hidden cursor-pointer items-center rounded-md p-2 hover:cursor-pointer hover:bg-neutral-300 dark:hover:bg-neutral-500"
      >
        <button aria-label="Close menu button"
          ><X class="hover:cursor-pointer" /></button
        >
      </div>
    </div>
  </div>
</nav>

<!-- Mobile menu -->
<div
  class="navbar-menu-mobile invisible absolute z-20 mt-14 mb-5 w-full bg-[#9796f0] drop-shadow-lg dark:bg-[#0f0c29]"
>
  <ul class="drop-shadow-lg">
    <MobileNavItem href="/" text="Home" />
    <MobileNavItem href="/#about" text="About" />
    <MobileNavItem href="/#projects" text="Projects" />
    <MobileNavItem href="/#contact" text="Contact" />
    <li
      class="my-2 h-14 cursor-pointer p-0 text-lg hover:rounded-md hover:bg-neutral-300 dark:hover:bg-neutral-500"
    >
      <span
        id="themeToggleMobile"
        class="m-0 flex h-full w-full items-center border-0 bg-none pl-6"
      >
        <Sun id="sun" class="hidden dark:inline-block" />
        <Moon id="moon" class="inline-block dark:hidden" />
      </span>
    </li>
  </ul>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // eslint-disable-next-line no-console
    console.log(`
Hey there!

           __
          / _)
   .-^^^-/ /
__/       /
<__.|_|-|_|
    `);
    const nav = document.querySelector("nav");
    const burger = document.querySelector(".navbar-burger");
    const mobileMenu = document.querySelector(".navbar-menu-mobile");
    const close = document.querySelector(".navbar-close");
    const mobileMenuListItems = document.querySelectorAll(
      ".navbar-menu-mobile li",
    );
    const themeToggleMobile = document.querySelector("#themeToggleMobile");
    const themeToggle = document.querySelector("#themeToggle");

    function toggleMobileMenu() {
      if (nav && burger && mobileMenu && close) {
        mobileMenu.classList.toggle("invisible");
        mobileMenu.classList.toggle("drop-shadow-lg");
        burger.classList.toggle("hidden");
        burger.classList.toggle("inline-flex");
        close.classList.toggle("hidden");
        close.classList.toggle("inline-flex");
      }
    }

    if (nav && burger && mobileMenu && close) {
      burger.addEventListener("click", function () {
        toggleMobileMenu();
      });

      close.addEventListener("click", function () {
        toggleMobileMenu();
      });

      window.addEventListener("resize", function () {
        if (
          this.innerWidth >= 768 &&
          !mobileMenu.classList.contains("invisible")
        ) {
          mobileMenu.classList.toggle("invisible");
          burger.classList.toggle("hidden");
          close.classList.toggle("hidden");
        }
      });

      if (mobileMenuListItems) {
        mobileMenuListItems.forEach((li) => {
          li.addEventListener("click", function () {
            toggleMobileMenu();
          });
        });
      }
    }

    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme") ?? "light";
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }

    window.localStorage.setItem("theme", theme);

    if (themeToggle && themeToggleMobile) {
      const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");

        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      };

      themeToggle.addEventListener("click", handleToggleClick);
      themeToggleMobile.addEventListener("click", handleToggleClick);
    }
  });
</script>
